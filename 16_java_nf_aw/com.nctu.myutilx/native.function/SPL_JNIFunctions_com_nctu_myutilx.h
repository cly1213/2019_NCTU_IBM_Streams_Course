// DO NOT EDIT THIS FILE - it is machine generated
#ifndef SPL_JNIFunctions_com_nctu_myutilx_h
#define SPL_JNIFunctions_com_nctu_myutilx_h

#include <SPL/Runtime/Function/SPLJavaFunction.h>
#include <SPL/Runtime/Type/SPLType.h>

namespace SPL {
namespace JNIFunctions {
namespace com {
namespace nctu {
namespace myutilx {
class SPL_JNIFunctions {
public:

// Generated from application.My_java_functionImpl in impl/java/bin/application/My_java_functionImpl$StreamsModel.class at Thu Jul 04 11:53:32 CST 2019
static SPL::int32 cumuAdd(SPL::int32 const & arg1, SPL::int32 const & arg2) {
    static __thread void *func;
    static __thread jclass classGlobalRef;
    static __thread jmethodID mid;
    if (func == NULL) {
        func = SPL::SPLJavaFunction::loadFunction("16_java_nf_aw", "1.0.0", SPLJAVAFUNCTION_ADL_FILENAME, "impl/java/bin", "application.My_java_functionImpl", "cumuAdd", "(II)I", "com.nctu.myutilx", "public stateful int32 cumuAdd(int32 a, int32 b)", &classGlobalRef, &mid);
    }
    JNIEnv* env = SPL::SPLJavaFunction::getJNIEnv(func);
    SPL::int32 result = env->CallStaticIntMethod(classGlobalRef, mid, arg1, arg2);
    if (env->ExceptionCheck())
        SPL::SPLJavaFunction::throwCallError(func);
    return result;
}

// Generated from application.My_java_functionImpl in impl/java/bin/application/My_java_functionImpl$StreamsModel.class at Thu Jul 04 11:53:32 CST 2019
static SPL::uint32 cumuAdd(SPL::uint32 const & arg1, SPL::uint32 const & arg2) {
    SPL::int32 result = cumuAdd((SPL::int32) arg1, (SPL::int32) arg2);
    return (SPL::uint32) result;
}

};
}
}
}
}
}
#endif
